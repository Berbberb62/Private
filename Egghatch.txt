-- Mobile-Friendly GUI Setup
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AutoEggHatchGUI"
ScreenGui.Parent = playerGui

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 300, 0, 400)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
MainFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
Title.Text = "Auto Egg Hatch GUI"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.SourceSans
Title.TextSize = 18
Title.BorderSizePixel = 0
Title.Parent = MainFrame

-- Minimize and Terminate Buttons
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -40, 0, 0)
minimizeButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.Text = "-"
minimizeButton.Font = Enum.Font.SourceSans
minimizeButton.TextSize = 18
minimizeButton.Parent = MainFrame

local terminateButton = Instance.new("TextButton")
terminateButton.Size = UDim2.new(0, 30, 0, 30)
terminateButton.Position = UDim2.new(1, -70, 0, 0)
terminateButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
terminateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
terminateButton.Text = "X"
terminateButton.Font = Enum.Font.SourceSans
terminateButton.TextSize = 18
terminateButton.Parent = MainFrame

-- Scrolling Frame for Egg Toggles
local ScrollingFrame = Instance.new("ScrollingFrame")
ScrollingFrame.Size = UDim2.new(1, 0, 1, -30)
ScrollingFrame.Position = UDim2.new(0, 0, 0, 30)
ScrollingFrame.BackgroundTransparency = 1
ScrollingFrame.ScrollBarThickness = 8
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollingFrame.Parent = MainFrame

local toggleYOffset = 0

-- Function to create toggles for eggs
local function addEggToggle(parent, eggName, eggId, varName)
    local ToggleFrame = Instance.new("Frame")
    ToggleFrame.Size = UDim2.new(1, -20, 0, 30)
    ToggleFrame.Position = UDim2.new(0, 10, 0, toggleYOffset)
    ToggleFrame.BackgroundTransparency = 1
    ToggleFrame.Parent = parent

    local ToggleText = Instance.new("TextLabel")
    ToggleText.Size = UDim2.new(0.7, 0, 1, 0)
    ToggleText.BackgroundTransparency = 1
    ToggleText.Text = "[HATCH]" .. eggName .. " Egg"
    ToggleText.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleText.Font = Enum.Font.SourceSans
    ToggleText.TextSize = 16
    ToggleText.Parent = ToggleFrame

    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Size = UDim2.new(0.3, 0, 1, 0)
    ToggleButton.Position = UDim2.new(0.7, 0, 0, 0)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.Text = "Off"
    ToggleButton.Font = Enum.Font.SourceSans
    ToggleButton.TextSize = 16
    ToggleButton.Parent = ToggleFrame

    _G[varName] = false
    ToggleButton.MouseButton1Click:Connect(function()
        _G[varName] = not _G[varName]
        ToggleButton.Text = _G[varName] and "On" or "Off"
        while _G[varName] and task.wait() do
            local args = { [1] = tostring(eggId) }
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("PlayerPressedKeyOnEgg"):FireServer(unpack(args))
        end
    end)

    toggleYOffset = toggleYOffset + 35
end

-- Hide Animation Toggle
local HideAnimationToggle = Instance.new("Frame")
HideAnimationToggle.Size = UDim2.new(1, -20, 0, 30)
HideAnimationToggle.Position = UDim2.new(0, 10, 0, toggleYOffset)
HideAnimationToggle.BackgroundTransparency = 1
HideAnimationToggle.Parent = ScrollingFrame

local HideAnimationText = Instance.new("TextLabel")
HideAnimationText.Size = UDim2.new(0.7, 0, 1, 0)
HideAnimationText.BackgroundTransparency = 1
HideAnimationText.Text = "Hide Animation"
HideAnimationText.TextColor3 = Color3.fromRGB(255, 255, 255)
HideAnimationText.Font = Enum.Font.SourceSans
HideAnimationText.TextSize = 16
HideAnimationText.Parent = HideAnimationToggle

local HideAnimationButton = Instance.new("TextButton")
HideAnimationButton.Size = UDim2.new(0.3, 0, 1, 0)
HideAnimationButton.Position = UDim2.new(0.7, 0, 0, 0)
HideAnimationButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
HideAnimationButton.TextColor3 = Color3.fromRGB(255, 255, 255)
HideAnimationButton.Text = "Off"
HideAnimationButton.Font = Enum.Font.SourceSans
HideAnimationButton.TextSize = 16
HideAnimationButton.Parent = HideAnimationToggle

local autoHideAnimation = false
HideAnimationButton.MouseButton1Click:Connect(function()
    autoHideAnimation = not autoHideAnimation
    HideAnimationButton.Text = autoHideAnimation and "On" or "Off"
    while autoHideAnimation and task.wait() do
        local eggMap = workspace.Camera:FindFirstChild("EggOpenMap")
        if eggMap then
            eggMap:Destroy()
        end
    end
end)

toggleYOffset = toggleYOffset + 35

-- Adding egg toggles to the ScrollingFrame
local worlds = {
    { "Forest", 1, "autoBreakEgg1" },
    { "Desert", 2, "autoBreakDesertEgg" },
    { "Cave", 3, "autoBreakCaveEgg" },
    { "Ocean", 4, "autoBreakOceanEgg" },
    { "Candy Zone", 5, "autoBreakCandyEgg" },
    { "Snow", 6, "autoBreakSnowEgg" },
    { "Toy Zone", 7, "autoBreakToyEgg" },
    { "Farm", 8, "autoBreakFarmEgg" },
    { "Samurai", 9, "autoBreakSamuraiEgg" },
    { "Space", 10, "autoBreakSpaceEgg" },
    { "Magical Forest", 11, "autoBreakMagicalForestEgg" },
    { "Heaven", 12, "autoBreakHeavenEgg" },
    { "Underworld", 13, "autoBreakUnderworldEgg" },
    { "Laboratory", 14, "autoBreakLabEgg" },
    { "Pirate", 15, "autoBreakPirateEgg" },
    { "Savanna", 16, "autoBreakSavannaEgg" },
    { "Roman", 17, "autoBreakRomanEgg" },
    { "Ice World", 18, "autoBreakIceWorldEgg" },
    { "Robotic World", 19, "autoBreakRoboticWorldEgg" },
    { "Lava World", 20, "autoBreakLavaWorldEgg" },
    { "Fairy Forest", 21, "autoBreakFairyForestEgg" },
    { "Haunted World", 22, "autoBreakHauntedWorldEgg" },
    { "Egyptian Land", 23, "autoBreakEgyptianEgg" },
    { "Mechanical World", 24, "autoBreakMechanicalWorldEgg" },
    { "Nebula World", 25, "autoBreakNebulaWorldEgg" },
    { "Cloud World", 26, "autoBreakCloudWorldEgg" },
    { "Bakery World", 27, "autoBreakBakeryWorldEgg" }
}

for _, world in ipairs(worlds) do
    addEggToggle(ScrollingFrame, world[1], world[2], world[3])
end

-- Minimize Functionality
local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    if isMinimized then
        MainFrame.Size = UDim2.new(0, 300, 0, 400) -- Restore size
        ScrollingFrame.Visible = true
        minimizeButton.Text = "-"
    else
        MainFrame.Size = UDim2.new(0, 300, 0, 30) -- Minimize height
        ScrollingFrame.Visible = false
        minimizeButton.Text = "+"
    end
    isMinimized = not isMinimized
end)


terminateButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, toggleYOffset)
